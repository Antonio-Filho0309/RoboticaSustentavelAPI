// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjetoLivrariaAPI.Data;

#nullable disable

namespace RoboticaSustentavelAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250429204414_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("CPU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Processor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Computers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Dell",
                            CPU = "Intel i7-1165G7",
                            Processor = "16GB",
                            Quantity = 10,
                            Ram = "512GB SSD",
                            Status = 0,
                            Storage = "Intel i7"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "HP",
                            CPU = "Intel i5-10400",
                            Processor = "8GB",
                            Quantity = 5,
                            Ram = "1TB HDD",
                            Status = 0,
                            Storage = "Intel i5"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Lenovo",
                            CPU = "Intel i9-11900K",
                            Processor = "32GB",
                            Quantity = 3,
                            Ram = "1TB SSD",
                            Status = 0,
                            Storage = "Intel i9"
                        },
                        new
                        {
                            Id = 4,
                            CPU = "Ryzen 5 5600H",
                            Processor = "16GB",
                            Quantity = 8,
                            Ram = "256GB SSD",
                            Status = 0,
                            Storage = "AMD Ryzen 5"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Asus",
                            CPU = "Ryzen 7 5800H",
                            Processor = "32GB",
                            Quantity = 4,
                            Ram = "2TB HDD",
                            Status = 0,
                            Storage = "AMD Ryzen 7"
                        });
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDonation")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Donations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateDonation = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DateDonation = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DateDonation = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComputerId")
                        .HasColumnType("integer");

                    b.Property<int>("DonationId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("DonationId");

                    b.ToTable("ItemDonations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComputerId = 1,
                            DonationId = 1,
                            Quantity = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            ComputerId = 2,
                            DonationId = 1,
                            Quantity = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            ComputerId = 3,
                            DonationId = 2,
                            Quantity = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            ComputerId = 4,
                            DonationId = 3,
                            Quantity = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            ComputerId = 5,
                            DonationId = 3,
                            Quantity = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComputerId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SaleId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("SaleId");

                    b.ToTable("ItemSales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComputerId = 1,
                            Quantity = 1,
                            SaleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ComputerId = 2,
                            Quantity = 1,
                            SaleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ComputerId = 3,
                            Quantity = 1,
                            SaleId = 2
                        });
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("PriceSale")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PriceSale = 1500.0,
                            SaleDate = new DateTime(2023, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            PriceSale = 2000.0,
                            SaleDate = new DateTime(2023, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemDonation", b =>
                {
                    b.HasOne("RoboticaSustentavelAPI.Models.Computer", "Computer")
                        .WithMany("ItensDonation")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoboticaSustentavelAPI.Models.Donation", "Donation")
                        .WithMany("ItensDonations")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("Donation");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemSale", b =>
                {
                    b.HasOne("RoboticaSustentavelAPI.Models.Computer", "Computer")
                        .WithMany("ItensSales")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoboticaSustentavelAPI.Models.Sale", "Sale")
                        .WithMany("ItensSales")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Computer", b =>
                {
                    b.Navigation("ItensDonation");

                    b.Navigation("ItensSales");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Donation", b =>
                {
                    b.Navigation("ItensDonations");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Sale", b =>
                {
                    b.Navigation("ItensSales");
                });
#pragma warning restore 612, 618
        }
    }
}
