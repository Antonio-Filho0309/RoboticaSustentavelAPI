// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ProjetoLivrariaAPI.Data;

#nullable disable

namespace RoboticaSustentavelAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("CPU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Ram")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Computers");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateDonation")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemDonation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("CPU")
                        .HasColumnType("text");

                    b.Property<int?>("ComputerId")
                        .HasColumnType("integer");

                    b.Property<int>("DonationId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("DonationId");

                    b.ToTable("ItemDonations");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("text");

                    b.Property<string>("CPU")
                        .HasColumnType("text");

                    b.Property<int?>("ComputerId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("SaleId")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.HasIndex("SaleId");

                    b.ToTable("ItemSales");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("PriceSale")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("SaleDate")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemDonation", b =>
                {
                    b.HasOne("RoboticaSustentavelAPI.Models.Computer", "Computer")
                        .WithMany("ItensDonation")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RoboticaSustentavelAPI.Models.Donation", "Donation")
                        .WithMany("ItensDonations")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("Donation");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.ItemSale", b =>
                {
                    b.HasOne("RoboticaSustentavelAPI.Models.Computer", "Computer")
                        .WithMany("ItensSales")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("RoboticaSustentavelAPI.Models.Sale", "Sale")
                        .WithMany("ItensSales")
                        .HasForeignKey("SaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");

                    b.Navigation("Sale");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Computer", b =>
                {
                    b.Navigation("ItensDonation");

                    b.Navigation("ItensSales");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Donation", b =>
                {
                    b.Navigation("ItensDonations");
                });

            modelBuilder.Entity("RoboticaSustentavelAPI.Models.Sale", b =>
                {
                    b.Navigation("ItensSales");
                });
#pragma warning restore 612, 618
        }
    }
}
